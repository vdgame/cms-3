---
import MainLayout from '../../layouts/MainLayout.astro';
import Sidebar from '../../components/Sidebar.astro';
import BlogCard from '../../components/BlogCard.astro';
import {
  blogPosts,
  tags,
  popularBlogs,
  popularQuestions
} from '../../data/mockData';
import { formatDate } from '../../utils/dateUtils';

// 获取URL参数中的slug
const { slug } = Astro.params;

// 查找对应的博客文章
const post = blogPosts.find(p => p.slug === slug);

// 找不到文章时跳转到404或博客首页
if (!post) {
  return Astro.redirect('/blog');
}

// 获取相关推荐文章
const relatedPosts = blogPosts
  .filter(p => p.id !== post.id && p.tags.some(t => post.tags.some(pt => pt.id === t.id)))
  .slice(0, 3);

// 获取热门标签
const popularTags = tags.slice(0, 10);

// 自动生成目录
const generateTOC = (content) => {
  const headingRegex = /<h([2-3])[^>]*>(.*?)<\/h\1>/g;
  const toc = [];
  let match;

  while ((match = headingRegex.exec(content)) !== null) {
    const level = parseInt(match[1]);
    const title = match[2].replace(/<[^>]+>/g, '');
    const anchor = title.toLowerCase().replace(/\s+/g, '-').replace(/[^\w-]/g, '');

    toc.push({
      level,
      title,
      anchor
    });
  }

  return toc;
};

const tableOfContents = generateTOC(post.content);

// 处理内容，添加id属性以便锚点跳转
const processContent = (content) => {
  const headingRegex = /<h([2-3])[^>]*>(.*?)<\/h\1>/g;

  return content.replace(headingRegex, (match, level, title) => {
    const cleanTitle = title.replace(/<[^>]+>/g, '');
    const anchor = cleanTitle.toLowerCase().replace(/\s+/g, '-').replace(/[^\w-]/g, '');
    return `<h${level} id="${anchor}">${title}</h${level}>`;
  });
};

const processedContent = processContent(post.content);

// 页面标题
const title = `${post.title} - 博客`;
---

<MainLayout title={title}>
  <div class="container py-8">
    <div class="grid grid-cols-1 lg:grid-cols-12 gap-8">
      <!-- 左侧目录 -->
      <div class="hidden lg:block lg:col-span-2">
        <div class="sticky top-24">
          <div class="card p-4">
            <h3 class="text-lg font-bold mb-3">目录</h3>
            <nav class="toc">
              <ul class="space-y-2">
                {tableOfContents.map(heading => (
                  <li class={`toc-item toc-level-${heading.level}`}>
                    <a href={`#${heading.anchor}`} class="text-gray-700 hover:text-blue-600">
                      {heading.title}
                    </a>
                  </li>
                ))}
              </ul>
            </nav>
          </div>
        </div>
      </div>

      <!-- 中间内容区 -->
      <div class="lg:col-span-7">
        <article class="card overflow-hidden">
          {/* 文章头部 */}
          {post.coverImage && (
            <div class="relative aspect-video">
              <img
                src={post.coverImage}
                alt={post.title}
                class="w-full h-full object-cover"
              />
            </div>
          )}

          <div class="p-6">
            {/* 文章元数据 */}
            <div class="flex flex-wrap items-center mb-4 text-sm text-gray-600">
              <a href={`/category/${post.category.slug}`} class="bg-blue-100 text-blue-800 px-2 py-1 rounded mr-3">
                {post.category.name}
              </a>
              <time datetime={post.createdAt} class="mr-3">{formatDate(post.createdAt)}</time>
              <span class="flex items-center mr-3">
                <svg xmlns="http://www.w3.org/2000/svg" class="h-4 w-4 mr-1" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 12a3 3 0 11-6 0 3 3 0 016 0z" />
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M2.458 12C3.732 7.943 7.523 5 12 5c4.478 0 8.268 2.943 9.542 7-1.274 4.057-5.064 7-9.542 7-4.477 0-8.268-2.943-9.542-7z" />
                </svg>
                {post.viewCount} 阅读
              </span>
              <span class="flex items-center">
                <svg xmlns="http://www.w3.org/2000/svg" class="h-4 w-4 mr-1" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 8v4l3 3m6-3a9 9 0 11-18 0 9 9 0 0118 0z" />
                </svg>
                {post.readTime} 分钟阅读
              </span>
            </div>

            {/* 文章标题 */}
            <h1 class="text-3xl font-bold mb-4">{post.title}</h1>

            {/* 作者信息 */}
            <div class="flex items-center mb-6">
              <img src={post.author.avatar} alt={post.author.name} class="w-10 h-10 rounded-full mr-3" />
              <div>
                <div class="font-medium">{post.author.name}</div>
                <div class="text-sm text-gray-500">作者</div>
              </div>
            </div>

            {/* 文章标签 */}
            <div class="flex flex-wrap gap-2 mb-6">
              {post.tags.map(tag => (
                <a href={`/tag/${tag.slug}`} class="tag">{tag.name}</a>
              ))}
            </div>

            {/* 文章内容 */}
            <div class="prose prose-lg max-w-none">
              <Fragment set:html={processedContent} />
            </div>

            {/* 文章底部操作区 */}
            <div class="flex items-center justify-between mt-8 pt-6 border-t border-gray-200">
              <div class="flex space-x-4">
                <button class="flex items-center text-gray-700 hover:text-blue-600">
                  <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5 mr-1" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4.318 6.318a4.5 4.5 0 000 6.364L12 20.364l7.682-7.682a4.5 4.5 0 00-6.364-6.364L12 7.636l-1.318-1.318a4.5 4.5 0 00-6.364 0z" />
                  </svg>
                  点赞 ({post.likeCount})
                </button>
                <button class="flex items-center text-gray-700 hover:text-blue-600">
                  <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5 mr-1" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M8.684 13.342C8.886 12.938 9 12.482 9 12c0-.482-.114-.938-.316-1.342m0 2.684a3 3 0 110-2.684m0 2.684l6.632 3.316m-6.632-6l6.632-3.316m0 0a3 3 0 105.367-2.684 3 3 0 00-5.367 2.684zm0 9.316a3 3 0 105.368 2.684 3 3 0 00-5.368-2.684z" />
                  </svg>
                  分享
                </button>
                <button class="flex items-center text-gray-700 hover:text-blue-600">
                  <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5 mr-1" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M5 5a2 2 0 012-2h10a2 2 0 012 2v16l-7-3.5L5 21V5z" />
                  </svg>
                  收藏
                </button>
              </div>

              <div>
                <button class="flex items-center text-gray-700 hover:text-red-600">
                  <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5 mr-1" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 9v2m0 4h.01m-6.938 4h13.856c1.54 0 2.502-1.667 1.732-3L13.732 4c-.77-1.333-2.694-1.333-3.464 0L3.34 16c-.77 1.333.192 3 1.732 3z" />
                  </svg>
                  举报
                </button>
              </div>
            </div>
          </div>
        </article>

        {/* 相关文章推荐 */}
        {relatedPosts.length > 0 && (
          <div class="mt-8">
            <h3 class="text-xl font-bold mb-4">相关推荐</h3>
            <div class="grid grid-cols-1 md:grid-cols-3 gap-6">
              {relatedPosts.map(relatedPost => (
                <BlogCard post={relatedPost} compact={true} />
              ))}
            </div>
          </div>
        )}
      </div>

      <!-- 右侧侧边栏 -->
      <div class="lg:col-span-3">
        <div class="sticky top-24">
          <Sidebar
            showCreateButton={true}
            createButtonLink="/blog/create"
            createButtonText="发布博客"
            popularTags={popularTags}
            popularPosts={popularBlogs.slice(0, 5)}
            popularQuestions={popularQuestions.slice(0, 5)}
          />

          <!-- 二维码 -->
          <div class="card p-4 mt-6 text-center">
            <h3 class="text-lg font-bold mb-3">分享到微信</h3>
            <div class="bg-gray-100 p-4 rounded-lg">
              <svg viewBox="0 0 100 100" class="w-32 h-32 mx-auto">
                <path fill="#000" d="M0,0 L100,0 L100,100 L0,100 Z M10,10 L10,90 L90,90 L90,10 Z" />
                <text x="50" y="50" font-family="sans-serif" font-size="10" text-anchor="middle" dominant-baseline="middle">
                  扫码分享
                </text>
              </svg>
            </div>
            <p class="text-sm text-gray-600 mt-2">扫描二维码分享到微信</p>
          </div>
        </div>
      </div>
    </div>
  </div>

  <!-- 右下角快捷导航 -->
  <div class="fixed right-8 bottom-8 flex flex-col space-y-4">
    <button
      id="back-to-top"
      class="bg-blue-500 text-white rounded-full p-3 shadow-lg hover:bg-blue-600 transition-colors"
      aria-label="返回顶部"
    >
      <svg xmlns="http://www.w3.org/2000/svg" class="h-6 w-6" fill="none" viewBox="0 0 24 24" stroke="currentColor">
        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M5 15l7-7 7 7" />
      </svg>
    </button>

    <button
      id="show-qrcode"
      class="bg-blue-500 text-white rounded-full p-3 shadow-lg hover:bg-blue-600 transition-colors"
      aria-label="显示二维码"
    >
      <svg xmlns="http://www.w3.org/2000/svg" class="h-6 w-6" fill="none" viewBox="0 0 24 24" stroke="currentColor">
        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 4v1m6 11h2m-6 0h-2v4m0-11v3m0 0h.01M12 12h4.01M16 20h4M4 12h4m12 0h.01M5 8h2a1 1 0 001-1V5a1 1 0 00-1-1H5a1 1 0 00-1 1v2a1 1 0 001 1zm12 0h2a1 1 0 001-1V5a1 1 0 00-1-1h-2a1 1 0 00-1 1v2a1 1 0 001 1zM5 20h2a1 1 0 001-1v-2a1 1 0 00-1-1H5a1 1 0 00-1 1v2a1 1 0 001 1z" />
      </svg>
    </button>
  </div>
</MainLayout>

<style>
  .prose {
    @apply text-gray-800;
  }

  .prose h2 {
    @apply text-2xl font-bold mt-8 mb-4;
  }

  .prose h3 {
    @apply text-xl font-bold mt-6 mb-3;
  }

  .prose p {
    @apply mb-4 leading-relaxed;
  }

  .prose ul, .prose ol {
    @apply mb-4 pl-6;
  }

  .prose li {
    @apply mb-2;
  }

  .prose ul li {
    @apply list-disc;
  }

  .prose ol li {
    @apply list-decimal;
  }

  .toc-item {
    @apply transition-colors;
  }

  .toc-level-2 {
    @apply font-medium;
  }

  .toc-level-3 {
    @apply text-sm ml-4;
  }
</style>

<script>
  // 返回顶部按钮功能
  document.addEventListener('DOMContentLoaded', () => {
    const backToTopButton = document.getElementById('back-to-top');

    if (backToTopButton) {
      // 默认隐藏
      backToTopButton.classList.add('hidden');

      // 滚动时显示/隐藏
      window.addEventListener('scroll', () => {
        if (window.scrollY > 300) {
          backToTopButton.classList.remove('hidden');
        } else {
          backToTopButton.classList.add('hidden');
        }
      });

      // 点击返回顶部
      backToTopButton.addEventListener('click', () => {
        window.scrollTo({
          top: 0,
          behavior: 'smooth'
        });
      });
    }
  });
</script>
